From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: Arjan van de Ven <arjan@linux.intel.com>
Date: Wed, 11 Feb 2015 16:05:23 -0600
Subject: [PATCH] bootstats: add printk's to measure boot time in more detail

Few distro-tweaks to add printk's to visualize boot time better

Author:    Arjan van de Ven <arjan@linux.intel.com>

Signed-off-by: Miguel Bernal Marin <miguel.bernal.marin@linux.intel.com>
---
 arch/x86/kernel/alternative.c       | 4 ++++
 drivers/base/firmware_loader/main.c | 2 ++
 init/main.c                         | 2 +-
 kernel/kmod.c                       | 2 ++
 4 files changed, 9 insertions(+), 1 deletion(-)

diff --git a/arch/x86/kernel/alternative.c b/arch/x86/kernel/alternative.c
index 918a23704c0c..e4a599772a08 100644
--- a/arch/x86/kernel/alternative.c
+++ b/arch/x86/kernel/alternative.c
@@ -626,7 +626,9 @@ void __init alternative_instructions(void)
 	 * patching.
 	 */
 
+	printk("clr: Applying alternatives\n");
 	apply_alternatives(__alt_instructions, __alt_instructions_end);
+	printk("clr: Applying alternatives done\n");
 
 #ifdef CONFIG_SMP
 	/* Patch to UP if other cpus not imminent. */
@@ -637,6 +639,8 @@ void __init alternative_instructions(void)
 					    _text, _etext);
 	}
 
+	printk("clr: Applying alternatives smp done\n");
+
 	if (!uniproc_patched || num_possible_cpus() == 1)
 		free_init_pages("SMP alternatives",
 				(unsigned long)__smp_locks,
diff --git a/drivers/base/firmware_loader/main.c b/drivers/base/firmware_loader/main.c
index 8e9213b36e31..ae1c34093e75 100644
--- a/drivers/base/firmware_loader/main.c
+++ b/drivers/base/firmware_loader/main.c
@@ -631,6 +631,8 @@ request_firmware(const struct firmware **firmware_p, const char *name,
 {
 	int ret;
 
+	printk("clr: request_firmware: %s\n", name);
+
 	/* Need to pin this module until return */
 	__module_get(THIS_MODULE);
 	ret = _request_firmware(firmware_p, name, device, NULL, 0,
diff --git a/init/main.c b/init/main.c
index fdfef08da0c4..3177cf81fe1a 100644
--- a/init/main.c
+++ b/init/main.c
@@ -823,7 +823,7 @@ trace_initcall_start_cb(void *data, initcall_t fn)
 {
 	ktime_t *calltime = (ktime_t *)data;
 
-	printk(KERN_DEBUG "calling  %pF @ %i\n", fn, task_pid_nr(current));
+	printk(KERN_DEBUG "calling  %pF @ %i\n", fn, raw_smp_processor_id());
 	*calltime = ktime_get();
 }
 
diff --git a/kernel/kmod.c b/kernel/kmod.c
index a2de58de6ab6..cee747e84d2a 100644
--- a/kernel/kmod.c
+++ b/kernel/kmod.c
@@ -77,6 +77,8 @@ static int call_modprobe(char *module_name, int wait)
 		NULL
 	};
 
+	printk("clr: call_modprobe: %s   %i \n", module_name, wait);
+
 	char **argv = kmalloc(sizeof(char *[5]), GFP_KERNEL);
 	if (!argv)
 		goto out;
-- 
https://clearlinux.org

